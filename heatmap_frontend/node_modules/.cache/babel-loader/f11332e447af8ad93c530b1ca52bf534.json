{"ast":null,"code":"var _jsxFileName = \"/Users/lax001/My Documents/Web Dev - Hyperion/Paired project/covid-19_heatmap/heatmap_frontend/src/components/home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useState } from \"react\"; //Material UI components\n\nimport { Tooltip } from \"@mui/material\"; //mapbox\n\nimport mapboxgl from \"mapbox-gl\"; //COVID data\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst covidData = require(\"../covid_country_summary.json\");\n\nconst countryData = require(\"../countries.json\");\n\nconst {\n  Countries,\n  Global\n} = covidData;\nCountries.forEach(country => {\n  const countryCode = country.CountryCode;\n  const confirmed = country.TotalConfirmed;\n  const deaths = country.TotalDeaths;\n  const countryLocation = countryData.find(countryLoc => {\n    countryLoc.cca2 = country.CountryCode;\n    return countryLoc.latlng;\n  }); // new mapboxgl.Marker({})\n  //   .setLngLat([countryLocation[1], countryLocation[0]])\n  //   .addTo(map);\n});\nmapboxgl.accessToken = \"pk.eyJ1Ijoia3RvaDAwMSIsImEiOiJja3c0cG5waWowNm83Mm9yaHlnOGR1a2pmIn0.bqHDlPp7lU6GzPqk7LRacg\"; //process.env.MAPBOX_KEY;\n//'pk.eyJ1Ijoia3RvaDAwMSIsImEiOiJja3c0cG5waWowNm83Mm9yaHlnOGR1a2pmIn0.bqHDlPp7lU6GzPqk7LRacg';\n//fetch covid data\n\nconst getData = () => {\n  fetch(\"../covid_country_summary.json\").then(response => response.json).then(data => console.log(data));\n};\n\ngetData(); //Component to display the home page\n\nexport default function HomePage() {\n  _s();\n\n  const mapContainer = useRef(null);\n  const map = useRef(null); //lng and lat to Johannesburg SA\n\n  const [lng, setLng] = useState(24);\n  const [lat, setLat] = useState(-29);\n  const [zoom, setZoom] = useState(1.5); //COVID data\n  // const mapData = covidData.forEach((data) => {\n  //   const { CountryCode } = data;\n  //   console.log(CountryCode);\n  // });\n\n  console.log(Global);\n  useEffect(() => {\n    if (map.current) return; // initialize map only once\n\n    map.current = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: \"mapbox://styles/mapbox/dark-v10\",\n      center: [lng, lat],\n      zoom: zoom\n    });\n  });\n  useEffect(() => {\n    if (!map.current) return; // wait for map to initialize\n\n    map.current.on(\"move\", () => {\n      setLng(map.current.getCenter().lng.toFixed(4));\n      setLat(map.current.getCenter().lat.toFixed(4));\n      setZoom(map.current.getZoom().toFixed(2));\n    });\n  });\n  useEffect(() => {\n    Countries.forEach(country => {\n      const countryCode = country.CountryCode;\n      const confirmed = country.TotalConfirmed;\n      const deaths = country.TotalDeaths;\n      const countryLocation = countryData.find(countryLoc => {\n        countryLoc.cca2 = country.CountryCode;\n        return countryLoc.latlng;\n      });\n      console.log(countryLocation); // new mapboxgl.Marker({})\n      //   .setLngLat([countryLocation[1], countryLocation[0]])\n      //   .addTo(map);\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mapWrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mapContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"heatmapSubtext\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidebar\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Cases: \", Global.TotalConfirmed, \" | Deaths: \", Global.TotalDeaths, \" | Zoom: \", zoom]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: mapContainer,\n          className: \"map-container\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n\n_s(HomePage, \"zy8bPVqG0FSwNJBRkelf7OSzUBc=\");\n\n_c = HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/Users/lax001/My Documents/Web Dev - Hyperion/Paired project/covid-19_heatmap/heatmap_frontend/src/components/home.js"],"names":["React","useRef","useEffect","useState","Tooltip","mapboxgl","covidData","require","countryData","Countries","Global","forEach","country","countryCode","CountryCode","confirmed","TotalConfirmed","deaths","TotalDeaths","countryLocation","find","countryLoc","cca2","latlng","accessToken","getData","fetch","then","response","json","data","console","log","HomePage","mapContainer","map","lng","setLng","lat","setLat","zoom","setZoom","current","Map","container","style","center","on","getCenter","toFixed","getZoom"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\n\n//Material UI components\nimport { Tooltip } from \"@mui/material\";\n\n//mapbox\nimport mapboxgl from \"mapbox-gl\";\n\n//COVID data\nconst covidData = require(\"../covid_country_summary.json\");\nconst countryData = require(\"../countries.json\");\nconst { Countries, Global } = covidData;\nCountries.forEach((country) => {\n  const countryCode = country.CountryCode;\n  const confirmed = country.TotalConfirmed;\n  const deaths = country.TotalDeaths;\n  const countryLocation = countryData.find((countryLoc) => {\n    countryLoc.cca2 = country.CountryCode;\n    return countryLoc.latlng;\n  });\n  // new mapboxgl.Marker({})\n  //   .setLngLat([countryLocation[1], countryLocation[0]])\n  //   .addTo(map);\n});\nmapboxgl.accessToken =\n  \"pk.eyJ1Ijoia3RvaDAwMSIsImEiOiJja3c0cG5waWowNm83Mm9yaHlnOGR1a2pmIn0.bqHDlPp7lU6GzPqk7LRacg\";\n//process.env.MAPBOX_KEY;\n//'pk.eyJ1Ijoia3RvaDAwMSIsImEiOiJja3c0cG5waWowNm83Mm9yaHlnOGR1a2pmIn0.bqHDlPp7lU6GzPqk7LRacg';\n\n//fetch covid data\nconst getData = () => {\n  fetch(\"../covid_country_summary.json\")\n    .then((response) => response.json)\n    .then((data) => console.log(data));\n};\ngetData();\n\n//Component to display the home page\nexport default function HomePage() {\n  const mapContainer = useRef(null);\n  const map = useRef(null);\n  //lng and lat to Johannesburg SA\n  const [lng, setLng] = useState(24);\n  const [lat, setLat] = useState(-29);\n  const [zoom, setZoom] = useState(1.5);\n  //COVID data\n  // const mapData = covidData.forEach((data) => {\n  //   const { CountryCode } = data;\n  //   console.log(CountryCode);\n  // });\n\n  console.log(Global);\n  useEffect(() => {\n    if (map.current) return; // initialize map only once\n    map.current = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: \"mapbox://styles/mapbox/dark-v10\",\n      center: [lng, lat],\n      zoom: zoom,\n    });\n  });\n\n  useEffect(() => {\n    if (!map.current) return; // wait for map to initialize\n    map.current.on(\"move\", () => {\n      setLng(map.current.getCenter().lng.toFixed(4));\n      setLat(map.current.getCenter().lat.toFixed(4));\n      setZoom(map.current.getZoom().toFixed(2));\n    });\n  });\n\n  useEffect(() => {\n    Countries.forEach((country) => {\n      const countryCode = country.CountryCode;\n      const confirmed = country.TotalConfirmed;\n      const deaths = country.TotalDeaths;\n      const countryLocation = countryData.find((countryLoc) => {\n        countryLoc.cca2 = country.CountryCode;\n        return countryLoc.latlng;\n      });\n\n      console.log(countryLocation);\n      // new mapboxgl.Marker({})\n      //   .setLngLat([countryLocation[1], countryLocation[0]])\n      //   .addTo(map);\n    });\n  });\n\n  return (\n    <div className=\"mapWrapper\">\n      <div className=\"mapContainer\">\n        <div className=\"heatmapSubtext\">\n          {/* <p>\n            Please login or register to view the dashboard. <br />\n          </p> */}\n          <div className=\"sidebar\">\n            <div>\n              Cases: {Global.TotalConfirmed} | Deaths: {Global.TotalDeaths} |\n              Zoom: {zoom}\n            </div>\n          </div>\n          <div ref={mapContainer} className=\"map-container\" />\n        </div>\n        {/* <row>\n          <Tooltip title=\"Go to the login page\">\n            <a href=\"/login\">\n              <button className=\"heatmapbtn\">Login</button>\n            </a>\n          </Tooltip>\n\n          <Tooltip title=\"Go to the sign-up page\">\n            <a href=\"/sign-up\">\n              <button className=\"heatmapbtn\">Register</button>\n            </a>\n          </Tooltip>\n        </row> */}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}