{"ast":null,"code":"var _jsxFileName = \"/Users/lax001/My Documents/Web Dev - Hyperion/Paired project/covid-19_heatmap/heatmap_frontend/src/context/AuthContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport jwt_decode from \"jwt-decode\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport default AuthContext;\nexport const AuthProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n\n  /* state */\n\n  /*authentication token*/\n  let [authToken, setAuthToken] = useState(() => localStorage.getItem(\"authToken\") ? JSON.parse(localStorage.getItem(\"authToken\")) : null);\n  /* gets the user name from the auth token*/\n\n  let [user, setUser] = useState(() => localStorage.getItem(\"authToken\") ? jwt_decode(localStorage.getItem(\"authToken\")) : null);\n  /* used to trigger a new token being generated*/\n\n  let [loading, setLoading] = useState(true);\n  const history = useNavigate();\n  /*function to login the user and get the auth token */\n\n  let loginUser = async e => {\n    e.preventDefault();\n    console.log(\">>> Login details submitted <<<\");\n    let response = await fetch(\"http://127.0.0.1:8000/api/token/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username: e.target.username.value,\n        password: e.target.password.value\n      })\n    });\n    let data = await response.json();\n\n    if (response.status === 200) {\n      setAuthToken(data);\n      setUser(jwt_decode(data.access));\n      console.log(user);\n      localStorage.setItem(\"authToken\", JSON.stringify(date));\n    } else {\n      alert(\"could not authenticate user\");\n    }\n  }; //populates contextData with state\n\n\n  let contextData = {\n    user: user,\n    authToken: authToken\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextData,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthProvider, \"gApGibo3WJRe8Kw486rUrGQpO0Q=\", false, function () {\n  return [useNavigate];\n});\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/Users/lax001/My Documents/Web Dev - Hyperion/Paired project/covid-19_heatmap/heatmap_frontend/src/context/AuthContext.js"],"names":["createContext","useState","useEffect","useNavigate","jwt_decode","React","AuthContext","AuthProvider","children","authToken","setAuthToken","localStorage","getItem","JSON","parse","user","setUser","loading","setLoading","history","loginUser","e","preventDefault","console","log","response","fetch","method","headers","body","stringify","username","target","value","password","data","json","status","access","setItem","date","alert","contextData"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,WAAW,gBAAGN,aAAa,EAAjC;AAEA,eAAeM,WAAf;AAEA,OAAO,MAAMC,YAAY,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;;AAC5C;;AAEA;AACA,MAAI,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,MACvCU,YAAY,CAACC,OAAb,CAAqB,WAArB,IACIC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADJ,GAEI,IAHkC,CAAxC;AAMA;;AACA,MAAI,CAACG,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,MAC7BU,YAAY,CAACC,OAAb,CAAqB,WAArB,IACIR,UAAU,CAACO,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAD,CADd,GAEI,IAHwB,CAA9B;AAMA;;AACA,MAAI,CAACK,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,CAAC,IAAD,CAApC;AAEA,QAAMkB,OAAO,GAAGhB,WAAW,EAA3B;AAEA;;AAEA,MAAIiB,SAAS,GAAG,MAAOC,CAAP,IAAa;AAC3BA,IAAAA,CAAC,CAACC,cAAF;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AAEA,QAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAD,EAAqC;AAC7DC,MAAAA,MAAM,EAAE,MADqD;AAE7DC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFoD;AAK7DC,MAAAA,IAAI,EAAEhB,IAAI,CAACiB,SAAL,CAAe;AACnBC,QAAAA,QAAQ,EAAEV,CAAC,CAACW,MAAF,CAASD,QAAT,CAAkBE,KADT;AAEnBC,QAAAA,QAAQ,EAAEb,CAAC,CAACW,MAAF,CAASE,QAAT,CAAkBD;AAFT,OAAf;AALuD,KAArC,CAA1B;AAUA,QAAIE,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAT,EAAjB;;AAEA,QAAIX,QAAQ,CAACY,MAAT,KAAoB,GAAxB,EAA6B;AAC3B3B,MAAAA,YAAY,CAACyB,IAAD,CAAZ;AACAnB,MAAAA,OAAO,CAACZ,UAAU,CAAC+B,IAAI,CAACG,MAAN,CAAX,CAAP;AACAf,MAAAA,OAAO,CAACC,GAAR,CAAYT,IAAZ;AACAJ,MAAAA,YAAY,CAAC4B,OAAb,CAAqB,WAArB,EAAkC1B,IAAI,CAACiB,SAAL,CAAeU,IAAf,CAAlC;AACD,KALD,MAKO;AACLC,MAAAA,KAAK,CAAC,6BAAD,CAAL;AACD;AACF,GAzBD,CAxB4C,CAmD5C;;;AACA,MAAIC,WAAW,GAAG;AAChB3B,IAAAA,IAAI,EAAEA,IADU;AAEhBN,IAAAA,SAAS,EAAEA;AAFK,GAAlB;AAKA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEiC,WAA7B;AAAA,cAA2ClC;AAA3C;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CA5DM;;GAAMD,Y;UAoBKJ,W;;;KApBLI,Y","sourcesContent":["import { createContext, useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport jwt_decode from \"jwt-decode\";\n\nimport React from \"react\";\n\nconst AuthContext = createContext();\n\nexport default AuthContext;\n\nexport const AuthProvider = ({ children }) => {\n  /* state */\n\n  /*authentication token*/\n  let [authToken, setAuthToken] = useState(() =>\n    localStorage.getItem(\"authToken\")\n      ? JSON.parse(localStorage.getItem(\"authToken\"))\n      : null\n  );\n\n  /* gets the user name from the auth token*/\n  let [user, setUser] = useState(() =>\n    localStorage.getItem(\"authToken\")\n      ? jwt_decode(localStorage.getItem(\"authToken\"))\n      : null\n  );\n\n  /* used to trigger a new token being generated*/\n  let [loading, setLoading] = useState(true);\n\n  const history = useNavigate();\n\n  /*function to login the user and get the auth token */\n\n  let loginUser = async (e) => {\n    e.preventDefault();\n\n    console.log(\">>> Login details submitted <<<\");\n\n    let response = await fetch(\"http://127.0.0.1:8000/api/token/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        username: e.target.username.value,\n        password: e.target.password.value,\n      }),\n    });\n    let data = await response.json();\n\n    if (response.status === 200) {\n      setAuthToken(data);\n      setUser(jwt_decode(data.access));\n      console.log(user);\n      localStorage.setItem(\"authToken\", JSON.stringify(date));\n    } else {\n      alert(\"could not authenticate user\");\n    }\n  };\n\n  //populates contextData with state\n  let contextData = {\n    user: user,\n    authToken: authToken,\n  };\n\n  return (\n    <AuthContext.Provider value={contextData}>{children}</AuthContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}