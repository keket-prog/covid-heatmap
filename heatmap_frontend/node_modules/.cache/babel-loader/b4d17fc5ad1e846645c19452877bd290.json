{"ast":null,"code":"var _jsxFileName = \"/Users/lax001/My Documents/Web Dev - Hyperion/Paired project/covid_heatmap/auth_app/heatmap_frontend/src/components/home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useState } from \"react\"; //Material UI components\n\nimport { Tooltip } from \"@mui/material\"; //mapbox\n\nimport mapboxgl from \"mapbox-gl\"; //COVID data\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst covidData = require(\"../covid_country_summary.json\");\n\nconst countryData = require(\"../countries.json\");\n\nconst {\n  Countries,\n  Global\n} = covidData;\nCountries.forEach(country => {\n  const countryCode = country.CountryCode;\n  const confirmed = country.TotalConfirmed;\n  const deaths = country.TotalDeaths;\n  const countryLocation = countryData.find(countryLoc => {\n    countryLoc.cca2 = country.CountryCode;\n    return countryLoc.latlng;\n  }); // new mapboxgl.Marker({})\n  //   .setLngLat([countryLocation[1], countryLocation[0]])\n  //   .addTo(map);\n});\nmapboxgl.accessToken = \"pk.eyJ1Ijoia3RvaDAwMSIsImEiOiJja3c0cG5waWowNm83Mm9yaHlnOGR1a2pmIn0.bqHDlPp7lU6GzPqk7LRacg\"; //process.env.MAPBOX_KEY;\n//'pk.eyJ1Ijoia3RvaDAwMSIsImEiOiJja3c0cG5waWowNm83Mm9yaHlnOGR1a2pmIn0.bqHDlPp7lU6GzPqk7LRacg';\n\nconst data = [{\n  country: \"Afghanistan\",\n  county: null,\n  updatedAt: \"2022-05-10 04:20:50\",\n  stats: {\n    confirmed: 179010,\n    deaths: 7685,\n    recovered: null\n  },\n  coordinates: {\n    latitude: \"33.93911\",\n    longitude: \"67.709953\"\n  },\n  province: null\n}, {\n  country: \"Albania\",\n  county: null,\n  updatedAt: \"2022-05-10 04:20:50\",\n  stats: {\n    confirmed: 275372,\n    deaths: 3497,\n    recovered: null\n  },\n  coordinates: {\n    latitude: \"41.1533\",\n    longitude: \"20.1683\"\n  },\n  province: null\n}, {\n  country: \"Algeria\",\n  county: null,\n  updatedAt: \"2022-05-10 04:20:50\",\n  stats: {\n    confirmed: 265800,\n    deaths: 6875,\n    recovered: null\n  },\n  coordinates: {\n    latitude: \"28.0339\",\n    longitude: \"1.6596\"\n  },\n  province: null\n}, {\n  country: \"Andorra\",\n  county: null,\n  updatedAt: \"2022-05-10 04:20:50\",\n  stats: {\n    confirmed: 41717,\n    deaths: 153,\n    recovered: null\n  },\n  coordinates: {\n    latitude: \"42.5063\",\n    longitude: \"1.5218\"\n  },\n  province: null\n}, {\n  country: \"Angola\",\n  county: null,\n  updatedAt: \"2022-05-10 04:20:50\",\n  stats: {\n    confirmed: 99287,\n    deaths: 1900,\n    recovered: null\n  },\n  coordinates: {\n    latitude: \"-11.2027\",\n    longitude: \"17.8739\"\n  },\n  province: null\n}, {\n  country: \"Antarctica\",\n  county: null,\n  updatedAt: \"2022-05-10 04:20:50\",\n  stats: {\n    confirmed: 11,\n    deaths: 0,\n    recovered: null\n  },\n  coordinates: {\n    latitude: \"-71.9499\",\n    longitude: \"23.347\"\n  },\n  province: null\n}, {\n  country: \"Antigua and Barbuda\",\n  county: null,\n  updatedAt: \"2022-05-10 04:20:50\",\n  stats: {\n    confirmed: 7663,\n    deaths: 137,\n    recovered: null\n  },\n  coordinates: {\n    latitude: \"17.0608\",\n    longitude: \"-61.7964\"\n  },\n  province: null\n}, {\n  country: \"Argentina\",\n  county: null,\n  updatedAt: \"2022-05-10 04:20:50\",\n  stats: {\n    confirmed: 9101319,\n    deaths: 128729,\n    recovered: null\n  },\n  coordinates: {\n    latitude: \"-38.4161\",\n    longitude: \"-63.6167\"\n  },\n  province: null\n}, {\n  country: \"Armenia\",\n  county: null,\n  updatedAt: \"2022-05-10 04:20:50\",\n  stats: {\n    confirmed: 422896,\n    deaths: 8623,\n    recovered: null\n  },\n  coordinates: {\n    latitude: \"40.0691\",\n    longitude: \"45.0382\"\n  },\n  province: null\n}, {\n  country: \"Australia\",\n  county: null,\n  updatedAt: \"2022-05-10 04:20:50\",\n  stats: {\n    confirmed: 113368,\n    deaths: 56,\n    recovered: null\n  },\n  coordinates: {\n    latitude: \"-35.4735\",\n    longitude: \"149.0124\"\n  },\n  province: \"Australian Capital Territory\"\n}]; //fetch covid data\n\nconst getData = () => {\n  fetch(\"../covid_country_summary.json\").then(response => response.json).then(data => console.log(data));\n};\n\ngetData(); //Component to display the home page\n\nexport default function HomePage() {\n  _s();\n\n  const mapContainer = useRef(null); //const map = useRef(null);\n  //lng and lat to Johannesburg SA\n\n  const [lng, setLng] = useState(24);\n  const [lat, setLat] = useState(-29);\n  const [zoom, setZoom] = useState(2.5);\n  let [covidData, setCovidData] = useState(null); //COVID data\n  // const mapData = covidData.forEach((data) => {\n  //   const { CountryCode } = data;\n  //   console.log(CountryCode);\n  // });\n\n  console.log(Global);\n  useEffect(() => {\n    // if (map.current) return; // initialize map only once\n    const map = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: \"mapbox://styles/mapbox/dark-v10\",\n      center: [lng, lat],\n      zoom: zoom\n    });\n    data.forEach(location => {\n      var marker = new mapboxgl.Marker().setLngLat([location.coordinates.longitude, location.coordinates.latitude]).setPopup(new mapboxgl.Popup({\n        offset: 10\n      }).setHTML(\"<p>Deaths: \" + location.stats.deaths + \"</p>\" + \"<p> Cases: \" + location.stats.confirmed + \"</p>\").addTo(map));\n    });\n  }); // useEffect(() => {\n  //   if (!map.current) return; // wait for map to initialize\n  //   map.current.on(\"move\", () => {\n  //     setLng(map.current.getCenter().lng.toFixed(4));\n  //     setLat(map.current.getCenter().lat.toFixed(4));\n  //     setZoom(map.current.getZoom().toFixed(2));\n  //   });\n  // });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mapWrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mapContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"heatmapSubtext\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidebar\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Cases: \", Global.TotalConfirmed, \" | Deaths: \", Global.TotalDeaths, \" | Zoom: \", zoom]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: mapContainer,\n          className: \"map-container\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 246,\n    columnNumber: 5\n  }, this);\n}\n\n_s(HomePage, \"pBRMLjKM9eVJVE/pouD1yolzt5A=\");\n\n_c = HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/Users/lax001/My Documents/Web Dev - Hyperion/Paired project/covid_heatmap/auth_app/heatmap_frontend/src/components/home.js"],"names":["React","useRef","useEffect","useState","Tooltip","mapboxgl","covidData","require","countryData","Countries","Global","forEach","country","countryCode","CountryCode","confirmed","TotalConfirmed","deaths","TotalDeaths","countryLocation","find","countryLoc","cca2","latlng","accessToken","data","county","updatedAt","stats","recovered","coordinates","latitude","longitude","province","getData","fetch","then","response","json","console","log","HomePage","mapContainer","lng","setLng","lat","setLat","zoom","setZoom","setCovidData","map","Map","container","current","style","center","location","marker","Marker","setLngLat","setPopup","Popup","offset","setHTML","addTo"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\n\n//Material UI components\nimport { Tooltip } from \"@mui/material\";\n\n//mapbox\nimport mapboxgl from \"mapbox-gl\";\n\n//COVID data\nconst covidData = require(\"../covid_country_summary.json\");\nconst countryData = require(\"../countries.json\");\nconst { Countries, Global } = covidData;\nCountries.forEach((country) => {\n  const countryCode = country.CountryCode;\n  const confirmed = country.TotalConfirmed;\n  const deaths = country.TotalDeaths;\n  const countryLocation = countryData.find((countryLoc) => {\n    countryLoc.cca2 = country.CountryCode;\n    return countryLoc.latlng;\n  });\n  // new mapboxgl.Marker({})\n  //   .setLngLat([countryLocation[1], countryLocation[0]])\n  //   .addTo(map);\n});\nmapboxgl.accessToken =\n  \"pk.eyJ1Ijoia3RvaDAwMSIsImEiOiJja3c0cG5waWowNm83Mm9yaHlnOGR1a2pmIn0.bqHDlPp7lU6GzPqk7LRacg\";\n//process.env.MAPBOX_KEY;\n//'pk.eyJ1Ijoia3RvaDAwMSIsImEiOiJja3c0cG5waWowNm83Mm9yaHlnOGR1a2pmIn0.bqHDlPp7lU6GzPqk7LRacg';\n\nconst data = [\n  {\n    country: \"Afghanistan\",\n    county: null,\n    updatedAt: \"2022-05-10 04:20:50\",\n    stats: {\n      confirmed: 179010,\n      deaths: 7685,\n      recovered: null,\n    },\n    coordinates: {\n      latitude: \"33.93911\",\n      longitude: \"67.709953\",\n    },\n    province: null,\n  },\n  {\n    country: \"Albania\",\n    county: null,\n    updatedAt: \"2022-05-10 04:20:50\",\n    stats: {\n      confirmed: 275372,\n      deaths: 3497,\n      recovered: null,\n    },\n    coordinates: {\n      latitude: \"41.1533\",\n      longitude: \"20.1683\",\n    },\n    province: null,\n  },\n  {\n    country: \"Algeria\",\n    county: null,\n    updatedAt: \"2022-05-10 04:20:50\",\n    stats: {\n      confirmed: 265800,\n      deaths: 6875,\n      recovered: null,\n    },\n    coordinates: {\n      latitude: \"28.0339\",\n      longitude: \"1.6596\",\n    },\n    province: null,\n  },\n  {\n    country: \"Andorra\",\n    county: null,\n    updatedAt: \"2022-05-10 04:20:50\",\n    stats: {\n      confirmed: 41717,\n      deaths: 153,\n      recovered: null,\n    },\n    coordinates: {\n      latitude: \"42.5063\",\n      longitude: \"1.5218\",\n    },\n    province: null,\n  },\n  {\n    country: \"Angola\",\n    county: null,\n    updatedAt: \"2022-05-10 04:20:50\",\n    stats: {\n      confirmed: 99287,\n      deaths: 1900,\n      recovered: null,\n    },\n    coordinates: {\n      latitude: \"-11.2027\",\n      longitude: \"17.8739\",\n    },\n    province: null,\n  },\n  {\n    country: \"Antarctica\",\n    county: null,\n    updatedAt: \"2022-05-10 04:20:50\",\n    stats: {\n      confirmed: 11,\n      deaths: 0,\n      recovered: null,\n    },\n    coordinates: {\n      latitude: \"-71.9499\",\n      longitude: \"23.347\",\n    },\n    province: null,\n  },\n  {\n    country: \"Antigua and Barbuda\",\n    county: null,\n    updatedAt: \"2022-05-10 04:20:50\",\n    stats: {\n      confirmed: 7663,\n      deaths: 137,\n      recovered: null,\n    },\n    coordinates: {\n      latitude: \"17.0608\",\n      longitude: \"-61.7964\",\n    },\n    province: null,\n  },\n  {\n    country: \"Argentina\",\n    county: null,\n    updatedAt: \"2022-05-10 04:20:50\",\n    stats: {\n      confirmed: 9101319,\n      deaths: 128729,\n      recovered: null,\n    },\n    coordinates: {\n      latitude: \"-38.4161\",\n      longitude: \"-63.6167\",\n    },\n    province: null,\n  },\n  {\n    country: \"Armenia\",\n    county: null,\n    updatedAt: \"2022-05-10 04:20:50\",\n    stats: {\n      confirmed: 422896,\n      deaths: 8623,\n      recovered: null,\n    },\n    coordinates: {\n      latitude: \"40.0691\",\n      longitude: \"45.0382\",\n    },\n    province: null,\n  },\n  {\n    country: \"Australia\",\n    county: null,\n    updatedAt: \"2022-05-10 04:20:50\",\n    stats: {\n      confirmed: 113368,\n      deaths: 56,\n      recovered: null,\n    },\n    coordinates: {\n      latitude: \"-35.4735\",\n      longitude: \"149.0124\",\n    },\n    province: \"Australian Capital Territory\",\n  },\n];\n\n//fetch covid data\nconst getData = () => {\n  fetch(\"../covid_country_summary.json\")\n    .then((response) => response.json)\n    .then((data) => console.log(data));\n};\ngetData();\n\n//Component to display the home page\nexport default function HomePage() {\n  const mapContainer = useRef(null);\n  //const map = useRef(null);\n  //lng and lat to Johannesburg SA\n  const [lng, setLng] = useState(24);\n  const [lat, setLat] = useState(-29);\n  const [zoom, setZoom] = useState(2.5);\n  let [covidData, setCovidData] = useState(null);\n  //COVID data\n  // const mapData = covidData.forEach((data) => {\n  //   const { CountryCode } = data;\n  //   console.log(CountryCode);\n  // });\n\n  console.log(Global);\n  useEffect(() => {\n    // if (map.current) return; // initialize map only once\n    const map = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: \"mapbox://styles/mapbox/dark-v10\",\n      center: [lng, lat],\n      zoom: zoom,\n    });\n    data.forEach((location) => {\n      var marker = new mapboxgl.Marker()\n        .setLngLat([\n          location.coordinates.longitude,\n          location.coordinates.latitude,\n        ])\n        .setPopup(\n          new mapboxgl.Popup({ offset: 10 })\n            .setHTML(\n              \"<p>Deaths: \" +\n                location.stats.deaths +\n                \"</p>\" +\n                \"<p> Cases: \" +\n                location.stats.confirmed +\n                \"</p>\"\n            )\n            .addTo(map)\n        );\n    });\n  });\n\n  // useEffect(() => {\n  //   if (!map.current) return; // wait for map to initialize\n  //   map.current.on(\"move\", () => {\n  //     setLng(map.current.getCenter().lng.toFixed(4));\n  //     setLat(map.current.getCenter().lat.toFixed(4));\n  //     setZoom(map.current.getZoom().toFixed(2));\n  //   });\n  // });\n\n  return (\n    <div className=\"mapWrapper\">\n      <div className=\"mapContainer\">\n        <div className=\"heatmapSubtext\">\n          {/* <p>\n            Please login or register to view the dashboard. <br />\n          </p> */}\n          <div className=\"sidebar\">\n            <div>\n              Cases: {Global.TotalConfirmed} | Deaths: {Global.TotalDeaths} |\n              Zoom: {zoom}\n            </div>\n          </div>\n          <div ref={mapContainer} className=\"map-container\" />\n        </div>\n        {/* <row>\n          <Tooltip title=\"Go to the login page\">\n            <a href=\"/login\">\n              <button className=\"heatmapbtn\">Login</button>\n            </a>\n          </Tooltip>\n\n          <Tooltip title=\"Go to the sign-up page\">\n            <a href=\"/sign-up\">\n              <button className=\"heatmapbtn\">Register</button>\n            </a>\n          </Tooltip>\n        </row> */}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}